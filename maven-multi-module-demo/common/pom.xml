<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
         http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.example</groupId>
        <artifactId>maven-multi-module-demo</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>common</artifactId>
    <packaging>jar</packaging>

    <name>Common Module</name>
    <description>公共模块 - 包含本地lib依赖</description>

    <dependencies>
        <!-- Spring Boot Starter -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <!--
            关键配置：使用system scope引用本地lib目录中的jar
            这里以commons-lang3的旧版本为例（假设这是不符合要求的旧版本）
            实际使用时，将你需要的jar文件放到 lib/ 目录下
        -->
        <!--
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.8.1</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/lib/commons-lang3-3.8.1.jar</systemPath>
        </dependency>
        -->

        <!--
            方案2：使用Maven插件在构建时将lib目录的jar包含到classpath
            这个方法更好，因为system scope在某些情况下会有问题
        -->
    </dependencies>

    <build>
        <plugins>
            <!-- 将本地lib目录作为资源包含进来 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <archive>
                        <manifestEntries>
                            <Class-Path>lib/</Class-Path>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>

            <!-- 将lib目录复制到target -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>copy-lib</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/lib</directory>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- 安装本地lib中的jar到本地Maven仓库 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>2.5.2</version>
                <executions>
                    <!-- 示例：安装本地jar到本地仓库 -->
                    <!--
                    <execution>
                        <id>install-local-jar</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <configuration>
                            <file>${project.basedir}/lib/your-jar-name.jar</file>
                            <groupId>com.example</groupId>
                            <artifactId>your-artifact-id</artifactId>
                            <version>1.0.0</version>
                            <packaging>jar</packaging>
                        </configuration>
                    </execution>
                    -->
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
